def Frobenius_Norm_New(x:torch.tensor,dim=-1,keepdim = False):
    if dim ==-1 or dim == len(x.shape)-1:
        x_ =[]
        for i in range(x.shape[0]):
            value = 0.
            for j in range(x.shape[1]):
                value +=np.square(np.abs(x[i,j].item()))
            x_.append(round(np.sqrt(value),4))
        return x_ 
    else:
        x_ =[]
        for i in range(x.shape[1]):
            value = 0.
            for j in range(x.shape[0]):
                value +=np.square(np.abs(x[j,i].item()))
            x_.append(round(np.sqrt(value),4))
        return x_ 
#x = Frobenius_Norm_New(tensor1,dim=1)
#print(x)
